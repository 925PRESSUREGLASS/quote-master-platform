"""Initial migration

Revision ID: 804841b4617d
Revises: 
Create Date: 2025-08-06 20:31:35.274000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '804841b4617d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', 'MODERATOR', name='userrole'), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING', name='userstatus'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_email_confirmed', sa.Boolean(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('analytics_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.Enum('USER_ACTION', 'SYSTEM_EVENT', 'PERFORMANCE', 'ERROR', 'ENGAGEMENT', 'CONVERSION', name='eventtype'), nullable=False),
    sa.Column('event_category', sa.Enum('AUTH', 'QUOTE', 'VOICE', 'PROFILE', 'NAVIGATION', 'SEARCH', 'SHARING', 'AI_INTERACTION', name='eventcategory'), nullable=False),
    sa.Column('event_name', sa.String(length=100), nullable=False),
    sa.Column('event_action', sa.String(length=50), nullable=True),
    sa.Column('event_label', sa.String(length=100), nullable=True),
    sa.Column('event_value', sa.Float(), nullable=True),
    sa.Column('event_data', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('referrer', sa.String(length=500), nullable=True),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.Column('device_type', sa.String(length=20), nullable=True),
    sa.Column('browser', sa.String(length=50), nullable=True),
    sa.Column('os', sa.String(length=50), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('page_load_time', sa.Float(), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('scroll_depth', sa.Float(), nullable=True),
    sa.Column('time_on_page', sa.Float(), nullable=True),
    sa.Column('clicks_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analytics_events_created_at'), 'analytics_events', ['created_at'], unique=False)
    op.create_index(op.f('ix_analytics_events_event_category'), 'analytics_events', ['event_category'], unique=False)
    op.create_index(op.f('ix_analytics_events_event_type'), 'analytics_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_analytics_events_id'), 'analytics_events', ['id'], unique=False)
    op.create_index(op.f('ix_analytics_events_session_id'), 'analytics_events', ['session_id'], unique=False)
    op.create_index(op.f('ix_analytics_events_user_id'), 'analytics_events', ['user_id'], unique=False)
    op.create_table('voice_recordings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_format', sa.Enum('WAV', 'MP3', 'OGG', 'WEBM', 'M4A', 'FLAC', name='audioformat'), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('transcription', sa.Text(), nullable=True),
    sa.Column('language_detected', sa.String(length=10), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('emotion_analysis', sa.Text(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('key_phrases', sa.Text(), nullable=True),
    sa.Column('topics_detected', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('UPLOADED', 'PROCESSING', 'PROCESSED', 'FAILED', 'TRANSCRIBING', 'ANALYZING', name='voicerecordingstatus'), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('processing_attempts', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transcribed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_voice_recordings_id'), 'voice_recordings', ['id'], unique=False)
    op.create_index(op.f('ix_voice_recordings_user_id'), 'voice_recordings', ['user_id'], unique=False)
    op.create_table('quotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=True),
    sa.Column('category', sa.Enum('MOTIVATIONAL', 'INSPIRATIONAL', 'WISDOM', 'LOVE', 'SUCCESS', 'LIFE', 'HAPPINESS', 'FRIENDSHIP', 'LEADERSHIP', 'CREATIVITY', 'SPIRITUAL', 'HUMOR', 'CUSTOM', name='quotecategory'), nullable=True),
    sa.Column('source', sa.Enum('AI_GENERATED', 'USER_INPUT', 'VOICE_TO_TEXT', 'IMPORTED', name='quotesource'), nullable=True),
    sa.Column('ai_model', sa.Enum('GPT4', 'GPT4_TURBO', 'GPT3_5', 'CLAUDE_3_OPUS', 'CLAUDE_3_SONNET', 'CLAUDE_3_HAIKU', 'GEMINI_PRO', name='aimodel'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('voice_recording_id', sa.Integer(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('emotion_primary', sa.String(length=50), nullable=True),
    sa.Column('emotion_confidence', sa.Float(), nullable=True),
    sa.Column('psychology_profile', sa.Text(), nullable=True),
    sa.Column('themes', sa.Text(), nullable=True),
    sa.Column('keywords', sa.Text(), nullable=True),
    sa.Column('prompt_used', sa.Text(), nullable=True),
    sa.Column('generation_context', sa.Text(), nullable=True),
    sa.Column('generation_temperature', sa.Float(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('share_count', sa.Integer(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('readability_score', sa.Float(), nullable=True),
    sa.Column('originality_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['voice_recording_id'], ['voice_recordings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quotes_id'), 'quotes', ['id'], unique=False)
    op.create_index(op.f('ix_quotes_user_id'), 'quotes', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quotes_user_id'), table_name='quotes')
    op.drop_index(op.f('ix_quotes_id'), table_name='quotes')
    op.drop_table('quotes')
    op.drop_index(op.f('ix_voice_recordings_user_id'), table_name='voice_recordings')
    op.drop_index(op.f('ix_voice_recordings_id'), table_name='voice_recordings')
    op.drop_table('voice_recordings')
    op.drop_index(op.f('ix_analytics_events_user_id'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_session_id'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_id'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_event_type'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_event_category'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_created_at'), table_name='analytics_events')
    op.drop_table('analytics_events')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
