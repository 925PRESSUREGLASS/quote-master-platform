"""Add service quotes and pricing rules models

Revision ID: da7f928a8809
Revises: 804841b4617d
Create Date: 2025-08-06 20:40:21.057842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'da7f928a8809'
down_revision: Union[str, Sequence[str], None] = '804841b4617d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pricing_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_name', sa.String(length=100), nullable=False),
    sa.Column('rule_type', sa.Enum('BASE_SERVICE', 'PROPERTY_MODIFIER', 'LOCATION_MODIFIER', 'DIFFICULTY_MODIFIER', 'QUANTITY_TIER', 'SEASONAL_MODIFIER', 'PROMOTION', name='pricingruletype'), nullable=False),
    sa.Column('service_type', sa.Enum('WINDOW_CLEANING', 'PRESSURE_WASHING', 'GUTTER_CLEANING', 'SOLAR_PANEL_CLEANING', 'ROOF_CLEANING', 'DRIVEWAY_CLEANING', 'COMBINED_SERVICE', name='servicetype'), nullable=True),
    sa.Column('property_type', sa.Enum('RESIDENTIAL_HOUSE', 'RESIDENTIAL_UNIT', 'COMMERCIAL_OFFICE', 'COMMERCIAL_RETAIL', 'INDUSTRIAL', 'STRATA_COMPLEX', name='propertytype'), nullable=True),
    sa.Column('suburb', sa.Enum('COTTESLOE', 'PEPPERMINT_GROVE', 'MOSMAN_PARK', 'NEDLANDS', 'DALKEITH', 'FREMANTLE', 'SUBIACO', 'LEEDERVILLE', 'MOUNT_LAWLEY', 'VICTORIA_PARK', 'PERTH_CBD', 'EAST_PERTH', 'WEST_PERTH', 'NORTHBRIDGE', 'JOONDALUP', 'ROCKINGHAM', 'MANDURAH', name='perthsuburb'), nullable=True),
    sa.Column('base_price', sa.Float(), nullable=True),
    sa.Column('modifier_type', sa.String(length=20), nullable=True),
    sa.Column('modifier_value', sa.Float(), nullable=True),
    sa.Column('min_price', sa.Float(), nullable=True),
    sa.Column('max_price', sa.Float(), nullable=True),
    sa.Column('quantity_min', sa.Integer(), nullable=True),
    sa.Column('quantity_max', sa.Integer(), nullable=True),
    sa.Column('per_unit_price', sa.Float(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('valid_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pricing_rules_id'), 'pricing_rules', ['id'], unique=False)
    op.create_index(op.f('ix_pricing_rules_is_active'), 'pricing_rules', ['is_active'], unique=False)
    op.create_index(op.f('ix_pricing_rules_rule_name'), 'pricing_rules', ['rule_name'], unique=False)
    op.create_index(op.f('ix_pricing_rules_rule_type'), 'pricing_rules', ['rule_type'], unique=False)
    op.create_index(op.f('ix_pricing_rules_service_type'), 'pricing_rules', ['service_type'], unique=False)
    op.create_table('service_quotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quote_number', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=True),
    sa.Column('customer_email', sa.String(length=255), nullable=True),
    sa.Column('customer_phone', sa.String(length=20), nullable=True),
    sa.Column('service_type', sa.Enum('WINDOW_CLEANING', 'PRESSURE_WASHING', 'GUTTER_CLEANING', 'SOLAR_PANEL_CLEANING', 'ROOF_CLEANING', 'DRIVEWAY_CLEANING', 'COMBINED_SERVICE', name='servicetype'), nullable=False),
    sa.Column('property_type', sa.Enum('RESIDENTIAL_HOUSE', 'RESIDENTIAL_UNIT', 'COMMERCIAL_OFFICE', 'COMMERCIAL_RETAIL', 'INDUSTRIAL', 'STRATA_COMPLEX', name='propertytype'), nullable=False),
    sa.Column('property_address', sa.Text(), nullable=True),
    sa.Column('suburb', sa.Enum('COTTESLOE', 'PEPPERMINT_GROVE', 'MOSMAN_PARK', 'NEDLANDS', 'DALKEITH', 'FREMANTLE', 'SUBIACO', 'LEEDERVILLE', 'MOUNT_LAWLEY', 'VICTORIA_PARK', 'PERTH_CBD', 'EAST_PERTH', 'WEST_PERTH', 'NORTHBRIDGE', 'JOONDALUP', 'ROCKINGHAM', 'MANDURAH', name='perthsuburb'), nullable=False),
    sa.Column('window_count', sa.Integer(), nullable=True),
    sa.Column('square_meters', sa.Float(), nullable=True),
    sa.Column('storeys', sa.Integer(), nullable=True),
    sa.Column('access_difficulty', sa.String(length=20), nullable=True),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('zone_adjustment', sa.Float(), nullable=True),
    sa.Column('difficulty_adjustment', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('adjustments', sa.JSON(), nullable=True),
    sa.Column('service_notes', sa.Text(), nullable=True),
    sa.Column('inclusions', sa.Text(), nullable=True),
    sa.Column('exclusions', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SENT', 'VIEWED', 'ACCEPTED', 'DECLINED', 'EXPIRED', 'CANCELLED', name='quotestatus'), nullable=True),
    sa.Column('source', sa.Enum('AI_GENERATED', 'MANUAL_INPUT', 'VOICE_TO_TEXT', 'PHONE_INQUIRY', 'WEBSITE_FORM', 'EMAIL_REQUEST', name='quotesource'), nullable=True),
    sa.Column('ai_model', sa.Enum('GPT4', 'GPT4_TURBO', 'GPT3_5', 'CLAUDE_3_OPUS', 'CLAUDE_3_SONNET', 'CLAUDE_3_HAIKU', 'GEMINI_PRO', name='aimodel'), nullable=True),
    sa.Column('voice_recording_id', sa.Integer(), nullable=True),
    sa.Column('customer_sentiment', sa.Float(), nullable=True),
    sa.Column('urgency_score', sa.Float(), nullable=True),
    sa.Column('conversion_probability', sa.Float(), nullable=True),
    sa.Column('psychology_profile', sa.Text(), nullable=True),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('terms_conditions', sa.Text(), nullable=True),
    sa.Column('payment_terms', sa.String(length=50), nullable=True),
    sa.Column('prompt_used', sa.Text(), nullable=True),
    sa.Column('generation_context', sa.Text(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('sent_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_viewed', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['voice_recording_id'], ['voice_recordings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_quotes_id'), 'service_quotes', ['id'], unique=False)
    op.create_index(op.f('ix_service_quotes_quote_number'), 'service_quotes', ['quote_number'], unique=True)
    op.create_index(op.f('ix_service_quotes_status'), 'service_quotes', ['status'], unique=False)
    op.create_index(op.f('ix_service_quotes_suburb'), 'service_quotes', ['suburb'], unique=False)
    op.create_index(op.f('ix_service_quotes_user_id'), 'service_quotes', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_service_quotes_user_id'), table_name='service_quotes')
    op.drop_index(op.f('ix_service_quotes_suburb'), table_name='service_quotes')
    op.drop_index(op.f('ix_service_quotes_status'), table_name='service_quotes')
    op.drop_index(op.f('ix_service_quotes_quote_number'), table_name='service_quotes')
    op.drop_index(op.f('ix_service_quotes_id'), table_name='service_quotes')
    op.drop_table('service_quotes')
    op.drop_index(op.f('ix_pricing_rules_service_type'), table_name='pricing_rules')
    op.drop_index(op.f('ix_pricing_rules_rule_type'), table_name='pricing_rules')
    op.drop_index(op.f('ix_pricing_rules_rule_name'), table_name='pricing_rules')
    op.drop_index(op.f('ix_pricing_rules_is_active'), table_name='pricing_rules')
    op.drop_index(op.f('ix_pricing_rules_id'), table_name='pricing_rules')
    op.drop_table('pricing_rules')
    # ### end Alembic commands ###
