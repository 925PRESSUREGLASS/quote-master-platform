[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "quote-master-pro"
version = "1.0.0"
description = "AI-powered quote generation platform with voice recognition and psychological insights"
authors = [
    {name = "Quote Master Pro Team", email = "team@quotemasterpro.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "whisper>=1.0.0",
    "speechrecognition>=3.10.0",
    "pyaudio>=0.2.11",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "textblob>=0.17.0",
    "spacy>=3.7.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "httpx>=0.25.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "faker>=19.6.0",
]
prod = [
    "gunicorn>=21.2.0",
    "newrelic>=9.2.0",
    "sentry-sdk[fastapi]>=1.32.0",
]

[project.urls]
Homepage = "https://github.com/quote-master-pro/quote-master-pro"
Documentation = "https://docs.quotemasterpro.com"
Repository = "https://github.com/quote-master-pro/quote-master-pro.git"
Issues = "https://github.com/quote-master-pro/quote-master-pro/issues"

[tool.hatch.version]
path = "src/__init__.py"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "whisper.*",
    "speechrecognition.*",
    "pyaudio.*",
    "textblob.*",
    "spacy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --disable-warnings"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]