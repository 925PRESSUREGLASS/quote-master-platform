# OpenTelemetry Collector Configuration
# Configures receivers, processors, exporters, and service pipelines

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://localhost:3000"
            - "http://localhost:8000"
            - "*"

  prometheus:
    config:
      scrape_configs:
        - job_name: 'quote-master-api'
          scrape_interval: 30s
          static_configs:
            - targets: ['host.docker.internal:8000']
          metrics_path: '/metrics'

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  memory_limiter:
    limit_mib: 256
    check_interval: 1s

  resource:
    attributes:
      - key: service.name
        value: "quote-master-pro"
        action: upsert
      - key: service.version  
        value: "1.0.0"
        action: upsert
      - key: deployment.environment
        value: "production"
        action: upsert

exporters:
  # Export traces to Jaeger via OTLP
  otlp/jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Export metrics to Prometheus  
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: quote_master
    const_labels:
      service: quote-master-pro

  # Export to console for debugging (can be disabled in production)
  debug:
    verbosity: normal
    sampling_initial: 2
    sampling_thereafter: 500

extensions:
  health_check:
    endpoint: 0.0.0.0:55679
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55680

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [otlp/jaeger, debug]
      
    metrics:
      receivers: [otlp, prometheus] 
      processors: [memory_limiter, resource, batch]
      exporters: [prometheus, debug]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch] 
      exporters: [debug]

  telemetry:
    logs:
      level: "info"
    metrics:
      level: "detailed"
